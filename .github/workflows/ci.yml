name: ci

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: 

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ratebooth
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:

      - name: Set up Go v1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install go-task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      - name: Install migrate tool
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate

      - name: Install sqlc tool
        run: go install github.com/kyleconroy/sqlc/cmd/sqlc@latest

      - name: Clone Repository
        uses: actions/checkout@v3
      
      - name: Run migrations up
        run: task migrate-up

      - name: Run migrations down
        run: echo y | task migrate-down

      - name: Run migrations up again
        run: task migrate-up
      
      - name: Run Tests
        run: task test

      - name: Did generate queries with sqlc?
        run: |
          task sqlc

          RESULT=$(git status)
          if [[ $RESULT == *"Changes not staged for commit:"* || $RESULT == *"Untracked files:"* ]]; then
            echo "ðŸ›‘ You need to run 'task sqlc' and commit the changes."
            git diff
            exit 1
          else
            echo "âœ… You are good to go."
          fi